/*! purgecss start ignore */

/*! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple] {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 320px) {
  .container {
    max-width: 320px;
  }
}

@media (min-width: 750px) {
  .container {
    max-width: 750px;
  }
}

@media (min-width: 990px) {
  .container {
    max-width: 990px;
  }
}

.aspect-h-8 {
  --tw-aspect-h: 8;
}

.aspect-h-9 {
  --tw-aspect-h: 9;
}

.aspect-w-16 {
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 16;
}

.aspect-w-16 > * {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/*! purgecss end ignore */

.tailwind :is(.sr-only) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.tailwind :is(.visible) {
  visibility: visible;
}

.tailwind :is(.invisible) {
  visibility: hidden;
}

.tailwind :is(.collapse) {
  visibility: collapse;
}

.tailwind :is(.static) {
  position: static;
}

.tailwind :is(.fixed) {
  position: fixed;
}

.tailwind :is(.absolute) {
  position: absolute;
}

.tailwind :is(.relative) {
  position: relative;
}

.tailwind :is(.sticky) {
  position: sticky;
}

.tailwind :is(.inset-0) {
  inset: 0px;
}

.tailwind :is(.bottom-0) {
  bottom: 0px;
}

.tailwind :is(.left-0) {
  left: 0px;
}

.tailwind :is(.left-1\/2) {
  left: 50%;
}

.tailwind :is(.right-0) {
  right: 0px;
}

.tailwind :is(.right-2) {
  right: 0.8rem;
}

.tailwind :is(.top-0) {
  top: 0px;
}

.tailwind :is(.top-1\/2) {
  top: 50%;
}

.tailwind :is(.top-2) {
  top: 0.8rem;
}

.tailwind :is(.isolate) {
  isolation: isolate;
}

.tailwind :is(.-z-10) {
  z-index: -10;
}

.tailwind :is(.z-10) {
  z-index: 10;
}

.tailwind :is(.z-50) {
  z-index: 50;
}

.tailwind :is(.z-\[10\]) {
  z-index: 10;
}

.tailwind :is(.z-\[60\]) {
  z-index: 60;
}

.tailwind :is(.col-span-4) {
  grid-column: span 4 / span 4;
}

.tailwind :is(.col-span-6) {
  grid-column: span 6 / span 6;
}

.tailwind :is(.col-start-4) {
  grid-column-start: 4;
}

.tailwind :is(.float-right) {
  float: right;
}

.tailwind :is(.m-2) {
  margin: 0.8rem;
}

.tailwind :is(.m-3) {
  margin: 1.2rem;
}

.tailwind :is(.-my-1) {
  margin-top: -0.4rem;
  margin-bottom: -0.4rem;
}

.tailwind :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto;
}

.tailwind :is(.my-6) {
  margin-top: 2.4rem;
  margin-bottom: 2.4rem;
}

.tailwind :is(.-mb-4) {
  margin-bottom: -1.6rem;
}

.tailwind :is(.-ml-12) {
  margin-left: -4.8rem;
}

.tailwind :is(.-ml-20) {
  margin-left: -8rem;
}

.tailwind :is(.-mt-20) {
  margin-top: -8rem;
}

.tailwind :is(.-mt-24) {
  margin-top: -9.6rem;
}

.tailwind :is(.mb-1) {
  margin-bottom: 0.4rem;
}

.tailwind :is(.mb-12) {
  margin-bottom: 4.8rem;
}

.tailwind :is(.mb-2) {
  margin-bottom: 0.8rem;
}

.tailwind :is(.mb-24) {
  margin-bottom: 9.6rem;
}

.tailwind :is(.mb-4) {
  margin-bottom: 1.6rem;
}

.tailwind :is(.mb-6) {
  margin-bottom: 2.4rem;
}

.tailwind :is(.mb-8) {
  margin-bottom: 3.2rem;
}

.tailwind :is(.ml-1) {
  margin-left: 0.4rem;
}

.tailwind :is(.ml-2) {
  margin-left: 0.8rem;
}

.tailwind :is(.ml-3) {
  margin-left: 1.2rem;
}

.tailwind :is(.ml-4) {
  margin-left: 1.6rem;
}

.tailwind :is(.ml-6) {
  margin-left: 2.4rem;
}

.tailwind :is(.mr-4) {
  margin-right: 1.6rem;
}

.tailwind :is(.mt-0) {
  margin-top: 0px;
}

.tailwind :is(.mt-1) {
  margin-top: 0.4rem;
}

.tailwind :is(.mt-10) {
  margin-top: 4rem;
}

.tailwind :is(.mt-12) {
  margin-top: 4.8rem;
}

.tailwind :is(.mt-16) {
  margin-top: 6.4rem;
}

.tailwind :is(.mt-2) {
  margin-top: 0.8rem;
}

.tailwind :is(.mt-20) {
  margin-top: 8rem;
}

.tailwind :is(.mt-24) {
  margin-top: 9.6rem;
}

.tailwind :is(.mt-28) {
  margin-top: 11.2rem;
}

.tailwind :is(.mt-3) {
  margin-top: 1.2rem;
}

.tailwind :is(.mt-4) {
  margin-top: 1.6rem;
}

.tailwind :is(.mt-5) {
  margin-top: 2rem;
}

.tailwind :is(.mt-6) {
  margin-top: 2.4rem;
}

.tailwind :is(.mt-7) {
  margin-top: 2.8rem;
}

.tailwind :is(.mt-8) {
  margin-top: 3.2rem;
}

.tailwind :is(.block) {
  display: block;
}

.tailwind :is(.inline-block) {
  display: inline-block;
}

.tailwind :is(.inline) {
  display: inline;
}

.tailwind :is(.flex) {
  display: flex;
}

.tailwind :is(.inline-flex) {
  display: inline-flex;
}

.tailwind :is(.table) {
  display: table;
}

.tailwind :is(.grid) {
  display: grid;
}

.tailwind :is(.hidden) {
  display: none;
}

.tailwind :is(.\!h-\[60vh\]) {
  height: 60vh !important;
}

.tailwind :is(.h-0) {
  height: 0px;
}

.tailwind :is(.h-1\/4) {
  height: 25%;
}

.tailwind :is(.h-12) {
  height: 4.8rem;
}

.tailwind :is(.h-16) {
  height: 6.4rem;
}

.tailwind :is(.h-2) {
  height: 0.8rem;
}

.tailwind :is(.h-2\.5) {
  height: 1rem;
}

.tailwind :is(.h-28) {
  height: 11.2rem;
}

.tailwind :is(.h-3) {
  height: 1.2rem;
}

.tailwind :is(.h-3\.5) {
  height: 1.4rem;
}

.tailwind :is(.h-3\/4) {
  height: 75%;
}

.tailwind :is(.h-4) {
  height: 1.6rem;
}

.tailwind :is(.h-5) {
  height: 2rem;
}

.tailwind :is(.h-6) {
  height: 2.4rem;
}

.tailwind :is(.h-8) {
  height: 3.2rem;
}

.tailwind :is(.h-\[64rem\]) {
  height: 64rem;
}

.tailwind :is(.h-auto) {
  height: auto;
}

.tailwind :is(.h-full) {
  height: 100%;
}

.tailwind :is(.min-h-\[60vh\]) {
  min-height: 60vh;
}

.tailwind :is(.min-h-\[80vh\]) {
  min-height: 80vh;
}

.tailwind :is(.w-12) {
  width: 4.8rem;
}

.tailwind :is(.w-16) {
  width: 6.4rem;
}

.tailwind :is(.w-2) {
  width: 0.8rem;
}

.tailwind :is(.w-2\.5) {
  width: 1rem;
}

.tailwind :is(.w-3) {
  width: 1.2rem;
}

.tailwind :is(.w-3\.5) {
  width: 1.4rem;
}

.tailwind :is(.w-4) {
  width: 1.6rem;
}

.tailwind :is(.w-5) {
  width: 2rem;
}

.tailwind :is(.w-56) {
  width: 22.4rem;
}

.tailwind :is(.w-6) {
  width: 2.4rem;
}

.tailwind :is(.w-7) {
  width: 2.8rem;
}

.tailwind :is(.w-8) {
  width: 3.2rem;
}

.tailwind :is(.w-\[25rem\]) {
  width: 25rem;
}

.tailwind :is(.w-\[32rem\]) {
  width: 32rem;
}

.tailwind :is(.w-\[64rem\]) {
  width: 64rem;
}

.tailwind :is(.w-full) {
  width: 100%;
}

.tailwind :is(.min-w-0) {
  min-width: 0px;
}

.tailwind :is(.min-w-\[320px\]) {
  min-width: 320px;
}

.tailwind :is(.max-w-2xl) {
  max-width: 67.2rem;
}

.tailwind :is(.max-w-3xl) {
  max-width: 76.8rem;
}

.tailwind :is(.max-w-6xl) {
  max-width: 115.2rem;
}

.tailwind :is(.max-w-7xl) {
  max-width: 128rem;
}

.tailwind :is(.max-w-\[1150px\]) {
  max-width: 1150px;
}

.tailwind :is(.max-w-\[38rem\]) {
  max-width: 38rem;
}

.tailwind :is(.max-w-\[40rem\]) {
  max-width: 40rem;
}

.tailwind :is(.max-w-\[42rem\]) {
  max-width: 42rem;
}

.tailwind :is(.max-w-\[44rem\]) {
  max-width: 44rem;
}

.tailwind :is(.max-w-\[450px\]) {
  max-width: 450px;
}

.tailwind :is(.max-w-\[60rem\]) {
  max-width: 60rem;
}

.tailwind :is(.max-w-lg) {
  max-width: 51.2rem;
}

.tailwind :is(.max-w-md) {
  max-width: 44.8rem;
}

.tailwind :is(.max-w-sm) {
  max-width: 38.4rem;
}

.tailwind :is(.max-w-xl) {
  max-width: 57.6rem;
}

.tailwind :is(.max-w-xs) {
  max-width: 32rem;
}

.tailwind :is(.flex-auto) {
  flex: 1 1 auto;
}

.tailwind :is(.flex-none) {
  flex: none;
}

.tailwind :is(.flex-shrink-0) {
  flex-shrink: 0;
}

.tailwind :is(.grow) {
  flex-grow: 1;
}

.tailwind :is(.-translate-x-1\/2) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.-translate-x-16) {
  --tw-translate-x: -6.4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.translate-x-16) {
  --tw-translate-x: 6.4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.translate-y-16) {
  --tw-translate-y: 6.4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes fade-left {
  0% {
    opacity: 0;
    transform: translateX(2rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.tailwind :is(.animate-fade-left) {
  animation: fade-left 1s both;
}

@keyframes fade-right {
  0% {
    opacity: 0;
    transform: translateX(-2rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.tailwind :is(.animate-fade-right) {
  animation: fade-right 1s both;
}

@keyframes fade-up {
  0% {
    opacity: 0;
    transform: translateY(2rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.tailwind :is(.animate-fade-up) {
  animation: fade-up 1s both;
}

@keyframes flip-up {
  0% {
    transform: rotateX(90deg);
    transform-origin: bottom;
  }

  100% {
    transform: rotateX(0);
    transform-origin: bottom;
  }
}

.tailwind :is(.animate-flip-up) {
  animation: flip-up 1s both;
}

.tailwind :is(.cursor-default) {
  cursor: default;
}

.tailwind :is(.cursor-pointer) {
  cursor: pointer;
}

.tailwind :is(.resize) {
  resize: both;
}

.tailwind :is(.grid-cols-1) {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.tailwind :is(.grid-cols-12) {
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.tailwind :is(.flex-row) {
  flex-direction: row;
}

.tailwind :is(.flex-col) {
  flex-direction: column;
}

.tailwind :is(.flex-col-reverse) {
  flex-direction: column-reverse;
}

.tailwind :is(.flex-wrap) {
  flex-wrap: wrap;
}

.tailwind :is(.items-start) {
  align-items: flex-start;
}

.tailwind :is(.items-center) {
  align-items: center;
}

.tailwind :is(.justify-start) {
  justify-content: flex-start;
}

.tailwind :is(.justify-end) {
  justify-content: flex-end;
}

.tailwind :is(.justify-center) {
  justify-content: center;
}

.tailwind :is(.justify-between) {
  justify-content: space-between;
}

.tailwind :is(.gap-10) {
  gap: 4rem;
}

.tailwind :is(.gap-2) {
  gap: 0.8rem;
}

.tailwind :is(.gap-3) {
  gap: 1.2rem;
}

.tailwind :is(.gap-4) {
  gap: 1.6rem;
}

.tailwind :is(.gap-6) {
  gap: 2.4rem;
}

.tailwind :is(.gap-x-2) {
  -moz-column-gap: 0.8rem;
       column-gap: 0.8rem;
}

.tailwind :is(.gap-x-3) {
  -moz-column-gap: 1.2rem;
       column-gap: 1.2rem;
}

.tailwind :is(.gap-x-3\.5) {
  -moz-column-gap: 1.4rem;
       column-gap: 1.4rem;
}

.tailwind :is(.gap-x-4) {
  -moz-column-gap: 1.6rem;
       column-gap: 1.6rem;
}

.tailwind :is(.gap-x-6) {
  -moz-column-gap: 2.4rem;
       column-gap: 2.4rem;
}

.tailwind :is(.gap-y-2) {
  row-gap: 0.8rem;
}

.tailwind :is(.gap-y-6) {
  row-gap: 2.4rem;
}

.tailwind :is(.space-x-1 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.4rem * var(--tw-space-x-reverse));
  margin-left: calc(0.4rem * calc(1 - var(--tw-space-x-reverse)));
}

.tailwind :is(.space-x-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.2rem * var(--tw-space-x-reverse));
  margin-left: calc(1.2rem * calc(1 - var(--tw-space-x-reverse)));
}

.tailwind :is(.space-x-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.6rem * var(--tw-space-x-reverse));
  margin-left: calc(1.6rem * calc(1 - var(--tw-space-x-reverse)));
}

.tailwind :is(.space-y-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.8rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.8rem * var(--tw-space-y-reverse));
}

.tailwind :is(.space-y-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.2rem * var(--tw-space-y-reverse));
}

.tailwind :is(.space-y-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.6rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.6rem * var(--tw-space-y-reverse));
}

.tailwind :is(.space-y-6 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.4rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.4rem * var(--tw-space-y-reverse));
}

.tailwind :is(.space-y-9 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(3.6rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(3.6rem * var(--tw-space-y-reverse));
}

.tailwind :is(.overflow-hidden) {
  overflow: hidden;
}

.tailwind :is(.overflow-y-auto) {
  overflow-y: auto;
}

.tailwind :is(.overflow-x-hidden) {
  overflow-x: hidden;
}

.tailwind :is(.truncate) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.tailwind :is(.rounded) {
  border-radius: 0.4rem;
}

.tailwind :is(.rounded-3xl) {
  border-radius: 2.4rem;
}

.tailwind :is(.rounded-lg) {
  border-radius: 0.8rem;
}

.tailwind :is(.rounded-md) {
  border-radius: 0.6rem;
}

.tailwind :is(.rounded-xl) {
  border-radius: 1.2rem;
}

.tailwind :is(.rounded-b-xl) {
  border-bottom-right-radius: 1.2rem;
  border-bottom-left-radius: 1.2rem;
}

.tailwind :is(.rounded-t-xl) {
  border-top-left-radius: 1.2rem;
  border-top-right-radius: 1.2rem;
}

.tailwind :is(.rounded-bl-xl) {
  border-bottom-left-radius: 1.2rem;
}

.tailwind :is(.rounded-tr-xl) {
  border-top-right-radius: 1.2rem;
}

.tailwind :is(.border) {
  border-width: 1px;
}

.tailwind :is(.border-0) {
  border-width: 0px;
}

.tailwind :is(.border-b) {
  border-bottom-width: 1px;
}

.tailwind :is(.border-t) {
  border-top-width: 1px;
}

.tailwind :is(.border-gray-200) {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.tailwind :is(.border-slate-400\/10) {
  border-color: rgb(148 163 184 / 0.1);
}

.tailwind :is(.border-transparent) {
  border-color: transparent;
}

.tailwind :is(.bg-black\/50) {
  background-color: rgb(0 0 0 / 0.5);
}

.tailwind :is(.bg-blue-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
}

.tailwind :is(.bg-blue-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 58 138 / var(--tw-bg-opacity));
}

.tailwind :is(.bg-gray-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.tailwind :is(.bg-gray-200\/50) {
  background-color: rgb(229 231 235 / 0.5);
}

.tailwind :is(.bg-gray-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.tailwind :is(.bg-highlight) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 185 227 / var(--tw-bg-opacity));
}

.tailwind :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.tailwind :is(.bg-white\/5) {
  background-color: rgb(255 255 255 / 0.05);
}

.tailwind :is(.bg-white\/\[\.1\]) {
  background-color: rgb(255 255 255 / .1);
}

.tailwind :is(.bg-opacity-50) {
  --tw-bg-opacity: 0.5;
}

.tailwind :is(.bg-\[url\(\'https\:\/\/images\.pexels\.com\/photos\/7679649\/pexels-photo-7679649\.jpeg\'\)\]) {
  background-image: url('https://images.pexels.com/photos/7679649/pexels-photo-7679649.jpeg');
}

.tailwind :is(.bg-gradient-to-r) {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.tailwind :is(.from-gray-100) {
  --tw-gradient-from: #f3f4f6 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(243 244 246 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.tailwind :is(.from-gray-50) {
  --tw-gradient-from: #f9fafb var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(249 250 251 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.tailwind :is(.from-primary) {
  --tw-gradient-from: #214588 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(33 69 136 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.tailwind :is(.from-white) {
  --tw-gradient-from: #fff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.tailwind :is(.via-accent) {
  --tw-gradient-to: rgb(28 69 145 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #1c4591 var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.tailwind :is(.via-gray-100) {
  --tw-gradient-to: rgb(243 244 246 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #f3f4f6 var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.tailwind :is(.via-white) {
  --tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.tailwind :is(.to-gray-100) {
  --tw-gradient-to: #f3f4f6 var(--tw-gradient-to-position);
}

.tailwind :is(.to-orange-600) {
  --tw-gradient-to: #ea580c var(--tw-gradient-to-position);
}

.tailwind :is(.to-white) {
  --tw-gradient-to: #fff var(--tw-gradient-to-position);
}

.tailwind :is(.to-primary) {
  --tw-gradient-to: #214588 var(--tw-gradient-to-position);
}

.tailwind :is(.bg-cover) {
  background-size: cover;
}

.tailwind :is(.bg-center) {
  background-position: center;
}

.tailwind :is(.bg-no-repeat) {
  background-repeat: no-repeat;
}

.tailwind :is(.object-cover) {
  -o-object-fit: cover;
     object-fit: cover;
}

.tailwind :is(.object-center) {
  -o-object-position: center;
     object-position: center;
}

.tailwind :is(.p-4) {
  padding: 1.6rem;
}

.tailwind :is(.p-5) {
  padding: 2rem;
}

.tailwind :is(.p-6) {
  padding: 2.4rem;
}

.tailwind :is(.p-8) {
  padding: 3.2rem;
}

.tailwind :is(.px-1) {
  padding-left: 0.4rem;
  padding-right: 0.4rem;
}

.tailwind :is(.px-2) {
  padding-left: 0.8rem;
  padding-right: 0.8rem;
}

.tailwind :is(.px-3) {
  padding-left: 1.2rem;
  padding-right: 1.2rem;
}

.tailwind :is(.px-3\.5) {
  padding-left: 1.4rem;
  padding-right: 1.4rem;
}

.tailwind :is(.px-4) {
  padding-left: 1.6rem;
  padding-right: 1.6rem;
}

.tailwind :is(.px-6) {
  padding-left: 2.4rem;
  padding-right: 2.4rem;
}

.tailwind :is(.px-8) {
  padding-left: 3.2rem;
  padding-right: 3.2rem;
}

.tailwind :is(.py-1) {
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;
}

.tailwind :is(.py-1\.5) {
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
}

.tailwind :is(.py-10) {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.tailwind :is(.py-12) {
  padding-top: 4.8rem;
  padding-bottom: 4.8rem;
}

.tailwind :is(.py-16) {
  padding-top: 6.4rem;
  padding-bottom: 6.4rem;
}

.tailwind :is(.py-2) {
  padding-top: 0.8rem;
  padding-bottom: 0.8rem;
}

.tailwind :is(.py-2\.5) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.tailwind :is(.py-24) {
  padding-top: 9.6rem;
  padding-bottom: 9.6rem;
}

.tailwind :is(.py-3) {
  padding-top: 1.2rem;
  padding-bottom: 1.2rem;
}

.tailwind :is(.py-3\.5) {
  padding-top: 1.4rem;
  padding-bottom: 1.4rem;
}

.tailwind :is(.py-4) {
  padding-top: 1.6rem;
  padding-bottom: 1.6rem;
}

.tailwind :is(.pb-2) {
  padding-bottom: 0.8rem;
}

.tailwind :is(.pb-24) {
  padding-bottom: 9.6rem;
}

.tailwind :is(.pb-3) {
  padding-bottom: 1.2rem;
}

.tailwind :is(.pb-4) {
  padding-bottom: 1.6rem;
}

.tailwind :is(.pb-8) {
  padding-bottom: 3.2rem;
}

.tailwind :is(.pr-8) {
  padding-right: 3.2rem;
}

.tailwind :is(.pt-10) {
  padding-top: 4rem;
}

.tailwind :is(.pt-12) {
  padding-top: 4.8rem;
}

.tailwind :is(.pt-20) {
  padding-top: 8rem;
}

.tailwind :is(.pt-24) {
  padding-top: 9.6rem;
}

.tailwind :is(.pt-3) {
  padding-top: 1.2rem;
}

.tailwind :is(.pt-4) {
  padding-top: 1.6rem;
}

.tailwind :is(.pt-6) {
  padding-top: 2.4rem;
}

.tailwind :is(.pt-8) {
  padding-top: 3.2rem;
}

.tailwind :is(.text-left) {
  text-align: left;
}

.tailwind :is(.\!text-center) {
  text-align: center !important;
}

.tailwind :is(.text-center) {
  text-align: center;
}

.tailwind :is(.align-middle) {
  vertical-align: middle;
}

.tailwind :is(.font-heading) {
  font-family: var(--font-heading-family);
}

.tailwind :is(.\!text-3xl) {
  font-size: 3rem !important;
  line-height: 3.6rem !important;
}

.tailwind :is(.\!text-4xl) {
  font-size: 3.6rem !important;
  line-height: 4rem !important;
}

.tailwind :is(.\!text-base) {
  font-size: 1.6rem !important;
  line-height: 2.4rem !important;
}

.tailwind :is(.text-2xl) {
  font-size: 2.4rem;
  line-height: 3.2rem;
}

.tailwind :is(.text-3xl) {
  font-size: 3rem;
  line-height: 3.6rem;
}

.tailwind :is(.text-4xl) {
  font-size: 3.6rem;
  line-height: 4rem;
}

.tailwind :is(.text-6xl) {
  font-size: 6rem;
  line-height: 1;
}

.tailwind :is(.text-base) {
  font-size: 1.6rem;
  line-height: 2.4rem;
}

.tailwind :is(.text-lg) {
  font-size: 1.8rem;
  line-height: 2.8rem;
}

.tailwind :is(.text-sm) {
  font-size: 1.4rem;
  line-height: 2rem;
}

.tailwind :is(.text-xl) {
  font-size: 2rem;
  line-height: 2.8rem;
}

.tailwind :is(.text-xs) {
  font-size: 1.2rem;
  line-height: 1.6rem;
}

.tailwind :is(.font-bold) {
  font-weight: 700;
}

.tailwind :is(.font-extrabold) {
  font-weight: 800;
}

.tailwind :is(.font-light) {
  font-weight: 300;
}

.tailwind :is(.font-medium) {
  font-weight: 500;
}

.tailwind :is(.font-normal) {
  font-weight: 400;
}

.tailwind :is(.font-semibold) {
  font-weight: 600;
}

.tailwind :is(.uppercase) {
  text-transform: uppercase;
}

.tailwind :is(.capitalize) {
  text-transform: capitalize;
}

.tailwind :is(.italic) {
  font-style: italic;
}

.tailwind :is(.leading-4) {
  line-height: 1.6rem;
}

.tailwind :is(.leading-6) {
  line-height: 2.4rem;
}

.tailwind :is(.leading-7) {
  line-height: 2.8rem;
}

.tailwind :is(.leading-8) {
  line-height: 3.2rem;
}

.tailwind :is(.leading-none) {
  line-height: 1;
}

.tailwind :is(.tracking-tight) {
  letter-spacing: -0.025em;
}

.tailwind :is(.\!text-green-400) {
  --tw-text-opacity: 1 !important;
  color: rgb(74 222 128 / var(--tw-text-opacity)) !important;
}

.tailwind :is(.\!text-highlight) {
  --tw-text-opacity: 1 !important;
  color: rgb(0 185 227 / var(--tw-text-opacity)) !important;
}

.tailwind :is(.\!text-red-400) {
  --tw-text-opacity: 1 !important;
  color: rgb(248 113 113 / var(--tw-text-opacity)) !important;
}

.tailwind :is(.\!text-yellow-400) {
  --tw-text-opacity: 1 !important;
  color: rgb(250 204 21 / var(--tw-text-opacity)) !important;
}

.tailwind :is(.text-accent) {
  --tw-text-opacity: 1;
  color: rgb(28 69 145 / var(--tw-text-opacity));
}

.tailwind :is(.text-copy) {
  --tw-text-opacity: 1;
  color: rgb(25 25 27 / var(--tw-text-opacity));
}

.tailwind :is(.text-copy\/80) {
  color: rgb(25 25 27 / 0.8);
}

.tailwind :is(.text-cyan-500) {
  --tw-text-opacity: 1;
  color: rgb(6 182 212 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-300) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-600) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-700) {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-800) {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

.tailwind :is(.text-gray-900) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.tailwind :is(.text-headlines) {
  --tw-text-opacity: 1;
  color: rgb(25 25 27 / var(--tw-text-opacity));
}

.tailwind :is(.text-highlight) {
  --tw-text-opacity: 1;
  color: rgb(0 185 227 / var(--tw-text-opacity));
}

.tailwind :is(.text-links) {
  --tw-text-opacity: 1;
  color: rgb(84 89 95 / var(--tw-text-opacity));
}

.tailwind :is(.text-orange-500) {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity));
}

.tailwind :is(.text-primary) {
  --tw-text-opacity: 1;
  color: rgb(33 69 136 / var(--tw-text-opacity));
}

.tailwind :is(.text-secondary) {
  --tw-text-opacity: 1;
  color: rgb(202 202 202 / var(--tw-text-opacity));
}

.tailwind :is(.text-slate-400) {
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / var(--tw-text-opacity));
}

.tailwind :is(.text-slate-500) {
  --tw-text-opacity: 1;
  color: rgb(100 116 139 / var(--tw-text-opacity));
}

.tailwind :is(.text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.tailwind :is(.\!no-underline) {
  text-decoration-line: none !important;
}

.tailwind :is(.opacity-0) {
  opacity: 0;
}

.tailwind :is(.shadow) {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.shadow-2xl) {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.shadow-lg) {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.shadow-sm) {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.shadow-xl) {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.shadow-gray-200) {
  --tw-shadow-color: #e5e7eb;
  --tw-shadow: var(--tw-shadow-colored);
}

.tailwind :is(.outline) {
  outline-style: solid;
}

.tailwind :is(.ring-1) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.tailwind :is(.ring-inset) {
  --tw-ring-inset: inset;
}

.tailwind :is(.ring-white\/10) {
  --tw-ring-color: rgb(255 255 255 / 0.1);
}

.tailwind :is(.ring-offset-white) {
  --tw-ring-offset-color: #fff;
}

.tailwind :is(.blur) {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.tailwind :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.tailwind :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.tailwind :is(.transition-\[height\]) {
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.tailwind :is(.transition-all) {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.tailwind :is(.duration-300) {
  transition-duration: 300ms;
}

.tailwind :is(.ease-out) {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.tailwind :is(.animate-delay-100) {
  animation-delay: 100ms;
}

.tailwind :is(.animate-duration-\[1500ms\]) {
  animation-duration: 1500ms;
}

.tailwind :is(.animate-once) {
  animation-iteration-count: 1;
}

.tailwind :is(.animate-ease-linear) {
  animation-timing-function: linear;
}

.tailwind :is(.animate-ease-out) {
  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.\[--overlay-backdrop\:static\] {
  --overlay-backdrop: static;
}

.\[mask-image\:radial-gradient\(closest-side\2c white\2c transparent\)\] {
  -webkit-mask-image: radial-gradient(closest-side,white,transparent);
          mask-image: radial-gradient(closest-side,white,transparent);
}

.tailwind :is(.first\:pt-0:first-child) {
  padding-top: 0px;
}

.tailwind :is(.last\:pb-0:last-child) {
  padding-bottom: 0px;
}

.tailwind :is(.hover\:scale-105:hover) {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.hover\:border-gray-300:hover) {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.tailwind :is(.hover\:bg-blue-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}

.tailwind :is(.hover\:bg-gray-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.tailwind :is(.hover\:bg-gray-50:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.tailwind :is(.hover\:bg-slate-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(241 245 249 / var(--tw-bg-opacity));
}

.tailwind :is(.hover\:bg-gradient-to-l:hover) {
  background-image: linear-gradient(to left, var(--tw-gradient-stops));
}

.tailwind :is(.hover\:text-gray-400:hover) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.tailwind :is(.hover\:text-gray-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.tailwind :is(.hover\:text-highlight:hover) {
  --tw-text-opacity: 1;
  color: rgb(0 185 227 / var(--tw-text-opacity));
}

.tailwind :is(.hover\:text-slate-300:hover) {
  --tw-text-opacity: 1;
  color: rgb(203 213 225 / var(--tw-text-opacity));
}

.tailwind :is(.hover\:text-slate-900:hover) {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity));
}

.tailwind :is(.hover\:no-underline:hover) {
  text-decoration-line: none;
}

.tailwind :is(.focus\:border-highlight:focus) {
  --tw-border-opacity: 1;
  border-color: rgb(0 185 227 / var(--tw-border-opacity));
}

.tailwind :is(.focus\:outline-none:focus) {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tailwind :is(.focus\:ring-2:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.tailwind :is(.focus\:ring-inset:focus) {
  --tw-ring-inset: inset;
}

.tailwind :is(.focus\:ring-blue-500:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));
}

.tailwind :is(.focus\:ring-blue-600:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(37 99 235 / var(--tw-ring-opacity));
}

.tailwind :is(.focus\:ring-gray-400:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(156 163 175 / var(--tw-ring-opacity));
}

.tailwind :is(.focus\:ring-highlight:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(0 185 227 / var(--tw-ring-opacity));
}

.tailwind :is(.focus\:ring-offset-2:focus) {
  --tw-ring-offset-width: 2px;
}

.tailwind :is(.focus\:ring-offset-white:focus) {
  --tw-ring-offset-color: #fff;
}

.tailwind :is(.focus-visible\:outline:focus-visible) {
  outline-style: solid;
}

.tailwind :is(.focus-visible\:outline-2:focus-visible) {
  outline-width: 2px;
}

.tailwind :is(.focus-visible\:outline-offset-2:focus-visible) {
  outline-offset: 2px;
}

.tailwind :is(.focus-visible\:outline-white:focus-visible) {
  outline-color: #fff;
}

.tailwind :is(.group:hover .group-hover\:text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.tailwind :is(.hs-accordion.active.hs-accordion-active\:block) {
  display: block;
}

.tailwind :is(.hs-accordion.active.hs-accordion-active\:rotate-180) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.hs-accordion.active.hs-accordion-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.tailwind :is(.hs-accordion.active > .hs-accordion-toggle .hs-accordion-active\:block) {
  display: block;
}

.tailwind :is(.hs-accordion.active > .hs-accordion-toggle .hs-accordion-active\:rotate-180) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.hs-accordion.active > .hs-accordion-toggle .hs-accordion-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.tailwind :is(.hs-accordion.active > .hs-accordion-toggle.hs-accordion-active\:block) {
  display: block;
}

.tailwind :is(.hs-accordion.active > .hs-accordion-toggle.hs-accordion-active\:rotate-180) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tailwind :is(.hs-accordion.active > .hs-accordion-toggle.hs-accordion-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.tailwind :is(.active.hs-tab-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.tailwind :is(.active.hs-tab-active\:text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

.tailwind :is(.active.hs-tab-active\:shadow-md) {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.active .hs-tab-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.tailwind :is(.active .hs-tab-active\:text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

.tailwind :is(.active .hs-tab-active\:shadow-md) {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind :is(.open.hs-overlay-open\:mt-7) {
  margin-top: 2.8rem;
}

.tailwind :is(.open.hs-overlay-open\:opacity-100) {
  opacity: 1;
}

.tailwind :is(.open.hs-overlay-open\:duration-500) {
  transition-duration: 500ms;
}

.tailwind :is(.open .hs-overlay-open\:mt-7) {
  margin-top: 2.8rem;
}

.tailwind :is(.open .hs-overlay-open\:opacity-100) {
  opacity: 1;
}

.tailwind :is(.open .hs-overlay-open\:duration-500) {
  transition-duration: 500ms;
}

.tailwind :is(.active.hs-scrollspy-active\:text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

@media (min-width: 200px) {
  .tailwind :is(.min-\[200px\]\:w-\[320px\]) {
    width: 320px;
  }
}

@media (min-width: 320px) {
  .tailwind :is(.sm\:col-span-4) {
    grid-column: span 4 / span 4;
  }

  .tailwind :is(.sm\:mx-auto) {
    margin-left: auto;
    margin-right: auto;
  }

  .tailwind :is(.sm\:mt-0) {
    margin-top: 0px;
  }

  .tailwind :is(.sm\:mt-10) {
    margin-top: 4rem;
  }

  .tailwind :is(.sm\:mt-24) {
    margin-top: 9.6rem;
  }

  .tailwind :is(.sm\:mt-6) {
    margin-top: 2.4rem;
  }

  .tailwind :is(.sm\:block) {
    display: block;
  }

  .tailwind :is(.sm\:inline-flex) {
    display: inline-flex;
  }

  .tailwind :is(.sm\:w-auto) {
    width: auto;
  }

  .tailwind :is(.sm\:w-full) {
    width: 100%;
  }

  .tailwind :is(.sm\:max-w-lg) {
    max-width: 51.2rem;
  }

  .tailwind :is(.sm\:grid-cols-1) {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .tailwind :is(.sm\:flex-row) {
    flex-direction: row;
  }

  .tailwind :is(.sm\:items-center) {
    align-items: center;
  }

  .tailwind :is(.sm\:justify-between) {
    justify-content: space-between;
  }

  .tailwind :is(.sm\:gap-3) {
    gap: 1.2rem;
  }

  .tailwind :is(.sm\:gap-x-6) {
    -moz-column-gap: 2.4rem;
         column-gap: 2.4rem;
  }

  .tailwind :is(.sm\:gap-y-0) {
    row-gap: 0px;
  }

  .tailwind :is(.sm\:space-y-4 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1.6rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1.6rem * var(--tw-space-y-reverse));
  }

  .tailwind :is(.sm\:space-y-8 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(3.2rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(3.2rem * var(--tw-space-y-reverse));
  }

  .tailwind :is(.sm\:rounded-3xl) {
    border-radius: 2.4rem;
  }

  .tailwind :is(.sm\:p-10) {
    padding: 4rem;
  }

  .tailwind :is(.sm\:px-16) {
    padding-left: 6.4rem;
    padding-right: 6.4rem;
  }

  .tailwind :is(.sm\:px-2) {
    padding-left: 0.8rem;
    padding-right: 0.8rem;
  }

  .tailwind :is(.sm\:px-6) {
    padding-left: 2.4rem;
    padding-right: 2.4rem;
  }

  .tailwind :is(.sm\:py-24) {
    padding-top: 9.6rem;
    padding-bottom: 9.6rem;
  }

  .tailwind :is(.sm\:pt-0) {
    padding-top: 0px;
  }

  .tailwind :is(.sm\:text-2xl) {
    font-size: 2.4rem;
    line-height: 3.2rem;
  }

  .tailwind :is(.sm\:text-3xl) {
    font-size: 3rem;
    line-height: 3.6rem;
  }

  .tailwind :is(.sm\:text-4xl) {
    font-size: 3.6rem;
    line-height: 4rem;
  }

  .tailwind :is(.sm\:text-5xl) {
    font-size: 4.8rem;
    line-height: 1;
  }

  .tailwind :is(.sm\:text-base) {
    font-size: 1.6rem;
    line-height: 2.4rem;
  }

  .tailwind :is(.sm\:text-sm) {
    font-size: 1.4rem;
    line-height: 2rem;
  }

  .tailwind :is(.sm\:leading-6) {
    line-height: 2.4rem;
  }
}

@media (min-width: 400px) {
  .tailwind :is(.min-\[400px\]\:w-\[320px\]) {
    width: 320px;
  }
}

@media (min-width: 500px) {
  .tailwind :is(.min-\[500px\]\:w-full) {
    width: 100%;
  }
}

@media (min-width: 750px) {
  .tailwind :is(.md\:visible) {
    visibility: visible;
  }

  .tailwind :is(.md\:invisible) {
    visibility: hidden;
  }

  .tailwind :is(.md\:left-1\/2) {
    left: 50%;
  }

  .tailwind :is(.md\:right-0) {
    right: 0px;
  }

  .tailwind :is(.md\:top-0) {
    top: 0px;
  }

  .tailwind :is(.md\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  .tailwind :is(.md\:col-span-3) {
    grid-column: span 3 / span 3;
  }

  .tailwind :is(.md\:col-start-3) {
    grid-column-start: 3;
  }

  .tailwind :is(.md\:-ml-20) {
    margin-left: -8rem;
  }

  .tailwind :is(.md\:-mr-8) {
    margin-right: -3.2rem;
  }

  .tailwind :is(.md\:mt-0) {
    margin-top: 0px;
  }

  .tailwind :is(.md\:mt-10) {
    margin-top: 4rem;
  }

  .tailwind :is(.md\:block) {
    display: block;
  }

  .tailwind :is(.md\:flex) {
    display: flex;
  }

  .tailwind :is(.md\:grid) {
    display: grid;
  }

  .tailwind :is(.md\:\!h-\[80vh\]) {
    height: 80vh !important;
  }

  .tailwind :is(.md\:h-0) {
    height: 0px;
  }

  .tailwind :is(.md\:h-7) {
    height: 2.8rem;
  }

  .tailwind :is(.md\:h-8) {
    height: 3.2rem;
  }

  .tailwind :is(.md\:h-auto) {
    height: auto;
  }

  .tailwind :is(.md\:w-7) {
    width: 2.8rem;
  }

  .tailwind :is(.md\:w-8) {
    width: 3.2rem;
  }

  .tailwind :is(.md\:w-9) {
    width: 3.6rem;
  }

  .tailwind :is(.md\:w-\[44rem\]) {
    width: 44rem;
  }

  .tailwind :is(.md\:max-w-\[40rem\]) {
    max-width: 40rem;
  }

  .tailwind :is(.md\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .tailwind :is(.md\:grid-cols-5) {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .tailwind :is(.md\:items-center) {
    align-items: center;
  }

  .tailwind :is(.md\:gap-12) {
    gap: 4.8rem;
  }

  .tailwind :is(.md\:gap-8) {
    gap: 3.2rem;
  }

  .tailwind :is(.md\:space-y-2 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0.8rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0.8rem * var(--tw-space-y-reverse));
  }

  .tailwind :is(.md\:space-y-4 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1.6rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1.6rem * var(--tw-space-y-reverse));
  }

  .tailwind :is(.md\:p-10) {
    padding: 4rem;
  }

  .tailwind :is(.md\:p-5) {
    padding: 2rem;
  }

  .tailwind :is(.md\:p-6) {
    padding: 2.4rem;
  }

  .tailwind :is(.md\:px-4) {
    padding-left: 1.6rem;
    padding-right: 1.6rem;
  }

  .tailwind :is(.md\:px-8) {
    padding-left: 3.2rem;
    padding-right: 3.2rem;
  }

  .tailwind :is(.md\:pb-16) {
    padding-bottom: 6.4rem;
  }

  .tailwind :is(.md\:pl-0) {
    padding-left: 0px;
  }

  .tailwind :is(.md\:pr-6) {
    padding-right: 2.4rem;
  }

  .tailwind :is(.md\:text-left) {
    text-align: left;
  }

  .tailwind :is(.md\:text-4xl) {
    font-size: 3.6rem;
    line-height: 4rem;
  }

  .tailwind :is(.md\:text-lg) {
    font-size: 1.8rem;
    line-height: 2.8rem;
  }

  .tailwind :is(.md\:leading-tight) {
    line-height: 1.25;
  }
}

@media (min-width: 990px) {
  .tailwind :is(.lg\:absolute) {
    position: absolute;
  }

  .tailwind :is(.lg\:col-span-4) {
    grid-column: span 4 / span 4;
  }

  .tailwind :is(.lg\:col-span-5) {
    grid-column: span 5 / span 5;
  }

  .tailwind :is(.lg\:col-span-6) {
    grid-column: span 6 / span 6;
  }

  .tailwind :is(.lg\:col-span-7) {
    grid-column: span 7 / span 7;
  }

  .tailwind :is(.lg\:col-span-8) {
    grid-column: span 8 / span 8;
  }

  .tailwind :is(.lg\:mx-0) {
    margin-left: 0px;
    margin-right: 0px;
  }

  .tailwind :is(.lg\:my-0) {
    margin-top: 0px;
    margin-bottom: 0px;
  }

  .tailwind :is(.lg\:-mt-24) {
    margin-top: -9.6rem;
  }

  .tailwind :is(.lg\:mb-0) {
    margin-bottom: 0px;
  }

  .tailwind :is(.lg\:mb-14) {
    margin-bottom: 5.6rem;
  }

  .tailwind :is(.lg\:ml-24) {
    margin-left: 9.6rem;
  }

  .tailwind :is(.lg\:mr-0) {
    margin-right: 0px;
  }

  .tailwind :is(.lg\:mt-0) {
    margin-top: 0px;
  }

  .tailwind :is(.lg\:mt-16) {
    margin-top: 6.4rem;
  }

  .tailwind :is(.lg\:mt-20) {
    margin-top: 8rem;
  }

  .tailwind :is(.lg\:mt-64) {
    margin-top: 25.6rem;
  }

  .tailwind :is(.lg\:mt-8) {
    margin-top: 3.2rem;
  }

  .tailwind :is(.lg\:\!block) {
    display: block !important;
  }

  .tailwind :is(.lg\:block) {
    display: block;
  }

  .tailwind :is(.lg\:inline) {
    display: inline;
  }

  .tailwind :is(.lg\:flex) {
    display: flex;
  }

  .tailwind :is(.lg\:\!inline-flex) {
    display: inline-flex !important;
  }

  .tailwind :is(.lg\:\!grid) {
    display: grid !important;
  }

  .tailwind :is(.lg\:grid) {
    display: grid;
  }

  .tailwind :is(.lg\:hidden) {
    display: none;
  }

  .tailwind :is(.lg\:h-16) {
    height: 6.4rem;
  }

  .tailwind :is(.lg\:max-h-\[950px\]) {
    max-height: 950px;
  }

  .tailwind :is(.lg\:w-16) {
    width: 6.4rem;
  }

  .tailwind :is(.lg\:w-full) {
    width: 100%;
  }

  .tailwind :is(.lg\:min-w-\[50rem\]) {
    min-width: 50rem;
  }

  .tailwind :is(.lg\:min-w-\[60rem\]) {
    min-width: 60rem;
  }

  .tailwind :is(.lg\:max-w-\[500px\]) {
    max-width: 500px;
  }

  .tailwind :is(.lg\:max-w-\[90rem\]) {
    max-width: 90rem;
  }

  .tailwind :is(.lg\:max-w-lg) {
    max-width: 51.2rem;
  }

  .tailwind :is(.lg\:max-w-md) {
    max-width: 44.8rem;
  }

  .tailwind :is(.lg\:max-w-none) {
    max-width: none;
  }

  .tailwind :is(.lg\:max-w-sm) {
    max-width: 38.4rem;
  }

  .tailwind :is(.lg\:max-w-xl) {
    max-width: 57.6rem;
  }

  .tailwind :is(.lg\:flex-none) {
    flex: none;
  }

  .tailwind :is(.lg\:flex-shrink-0) {
    flex-shrink: 0;
  }

  .tailwind :is(.lg\:grid-cols-12) {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .tailwind :is(.lg\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .tailwind :is(.lg\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .tailwind :is(.lg\:flex-row) {
    flex-direction: row;
  }

  .tailwind :is(.lg\:flex-row-reverse) {
    flex-direction: row-reverse;
  }

  .tailwind :is(.lg\:items-start) {
    align-items: flex-start;
  }

  .tailwind :is(.lg\:items-center) {
    align-items: center;
  }

  .tailwind :is(.lg\:justify-start) {
    justify-content: flex-start;
  }

  .tailwind :is(.lg\:justify-center) {
    justify-content: center;
  }

  .tailwind :is(.lg\:gap-12) {
    gap: 4.8rem;
  }

  .tailwind :is(.lg\:gap-8) {
    gap: 3.2rem;
  }

  .tailwind :is(.lg\:gap-x-8) {
    -moz-column-gap: 3.2rem;
         column-gap: 3.2rem;
  }

  .tailwind :is(.lg\:p-8) {
    padding: 3.2rem;
  }

  .tailwind :is(.lg\:px-2) {
    padding-left: 0.8rem;
    padding-right: 0.8rem;
  }

  .tailwind :is(.lg\:px-4) {
    padding-left: 1.6rem;
    padding-right: 1.6rem;
  }

  .tailwind :is(.lg\:px-6) {
    padding-left: 2.4rem;
    padding-right: 2.4rem;
  }

  .tailwind :is(.lg\:px-8) {
    padding-left: 3.2rem;
    padding-right: 3.2rem;
  }

  .tailwind :is(.lg\:py-12) {
    padding-top: 4.8rem;
    padding-bottom: 4.8rem;
  }

  .tailwind :is(.lg\:py-14) {
    padding-top: 5.6rem;
    padding-bottom: 5.6rem;
  }

  .tailwind :is(.lg\:py-16) {
    padding-top: 6.4rem;
    padding-bottom: 6.4rem;
  }

  .tailwind :is(.lg\:py-24) {
    padding-top: 9.6rem;
    padding-bottom: 9.6rem;
  }

  .tailwind :is(.lg\:py-32) {
    padding-top: 12.8rem;
    padding-bottom: 12.8rem;
  }

  .tailwind :is(.lg\:pt-0) {
    padding-top: 0px;
  }

  .tailwind :is(.lg\:pt-16) {
    padding-top: 6.4rem;
  }

  .tailwind :is(.lg\:pt-2) {
    padding-top: 0.8rem;
  }

  .tailwind :is(.lg\:pt-8) {
    padding-top: 3.2rem;
  }

  .tailwind :is(.lg\:text-left) {
    text-align: left;
  }

  .tailwind :is(.lg\:text-3xl) {
    font-size: 3rem;
    line-height: 3.6rem;
  }

  .tailwind :is(.lg\:text-4xl) {
    font-size: 3.6rem;
    line-height: 4rem;
  }

  .tailwind :is(.lg\:text-5xl) {
    font-size: 4.8rem;
    line-height: 1;
  }

  .tailwind :is(.lg\:text-6xl) {
    font-size: 6rem;
    line-height: 1;
  }

  .tailwind :is(.lg\:text-base) {
    font-size: 1.6rem;
    line-height: 2.4rem;
  }

  .tailwind :is(.lg\:text-lg) {
    font-size: 1.8rem;
    line-height: 2.8rem;
  }

  .tailwind :is(.lg\:leading-tight) {
    line-height: 1.25;
  }

  .tailwind :is(.lg\:placeholder\:col-span-6)::-moz-placeholder {
    grid-column: span 6 / span 6;
  }

  .tailwind :is(.lg\:placeholder\:col-span-6)::placeholder {
    grid-column: span 6 / span 6;
  }
}
